# -*- coding: utf-8 -*-
"""Fabrica_de_Contos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/lrfurst/25fc818ddb22d0a4cf52eca5947e1e52/imers-o-ia-alura-google-gemini-aula-05-agentes.ipynb
"""

# --- SEÇÃO 1: Importar as bibliotecas necessárias ---
import os
from google.colab import userdata
import ipywidgets as widgets
from IPython.display import display
from google import genai
from google.genai import types  # Import the types module
import textwrap

# --- Função auxiliar para exibir texto formatado em Markdown no Colab ---
def to_markdown(text):
    text = text.replace('•', '  *')
    return Markdown(textwrap.indent(text, '> ', predicate=lambda _: True))

# --- SEÇÃO 2: Configurar a chave de API ---
os.environ["GOOGLE_API_KEY"] = userdata.get('GOOGLE_API_KEY')

# --- SEÇÃO 3: Definir as listas predefinidas ---
tipos_historia = ["Aventura", "Fantasia", "Conto de Fadas", "Fábula", "Mistério"]
personagens = ["Um coelhinho esperto", "Uma princesa corajosa", "Um robô curioso", "Uma fada travessa", "Um dragão amigável"]
contextos = ["Uma floresta mágica", "Um castelo antigo", "Uma nave espacial", "Uma ilha deserta", "Uma cidade movimentada"]
tons = ["Divertido", "Emocionante", "Educativo", "Mágico", "Curioso"]

# --- SEÇÃO 4: Criar os widgets interativos para seleção ---
tipo_historia_dropdown = widgets.Dropdown(options=tipos_historia, description="Tipo de História:")
personagem_dropdown = widgets.Dropdown(options=personagens, description="Personagem:")
contexto_dropdown = widgets.Dropdown(options=contextos, description="Contexto:")
tamanho_slider = widgets.IntSlider(min=1, max=5, step=1, value=3, description="Tamanho (parágrafos):")
tom_dropdown = widgets.Dropdown(options=tons, description="Tom:")
gerar_button = widgets.Button(description="Gerar História")
output_text = widgets.Output()

MODEL_ID = "gemini-2.0-flash"

# --- SEÇÃO 5: Definir a função para gerar a história usando google-genai ---
def gerar_historia(button):
    global MODEL_ID  # Indica que queremos usar a variável global MODEL_ID
    with output_text:
        output_text.clear_output()
        tipo = tipo_historia_dropdown.value
        personagem = personagem_dropdown.value
        contexto = contexto_dropdown.value
        tamanho = tamanho_slider.value
        tom = tom_dropdown.value

        prompt = f"Crie uma história infantil com um tom {tom} sobre {personagem} que vive em {contexto} e passa por uma {tipo}. A história deve ter aproximadamente {tamanho} parágrafos."

        try:
            client = genai.Client(api_key=os.environ['GOOGLE_API_KEY'])
            response = client.models.generate_content(
                model=MODEL_ID,
                contents=prompt,
                config=types.GenerateContentConfig(
                    max_output_tokens=tamanho * 200,
                    temperature=0.7
                )
            )
            historia = response.text
            print(historia)
        except Exception as e:
            print(f"Ocorreu um erro ao gerar a história: {e}")

# --- SEÇÃO 6: Associar a função ao clique do botão e exibir os widgets ---
gerar_button.on_click(gerar_historia)

display(tipo_historia_dropdown)
display(personagem_dropdown)
display(contexto_dropdown)
display(tamanho_slider)
display(tom_dropdown)
display(gerar_button)
display(output_text)